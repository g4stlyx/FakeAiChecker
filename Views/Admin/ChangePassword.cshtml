@model FakeAiChecker.Models.ChangePasswordModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="row justify-content-center mt-4">
    <div class="col-md-6 col-lg-5">
        <div class="card border-primary shadow">
            <div class="card-header bg-primary text-white text-center">
                <h4><i class="fas fa-key me-2"></i>Change Password</h4>
            </div>
            <div class="card-body">
                <form asp-controller="Admin" asp-action="ChangePassword" method="post">
                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>@ViewBag.ErrorMessage
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
                    {
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle me-2"></i>@ViewBag.SuccessMessage
                        </div>
                    }

                    <div class="mb-3">
                        <label asp-for="CurrentPassword" class="form-label">Current Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input asp-for="CurrentPassword" type="password" class="form-control" placeholder="Enter current password" required />
                        </div>
                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NewPassword" class="form-label">New Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-key"></i></span>
                            <input asp-for="NewPassword" type="password" class="form-control" placeholder="Enter new password" required />
                        </div>
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                        <div class="form-text">
                            <small>Password must be at least 8 characters long</small>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-check-double"></i></span>
                            <input asp-for="ConfirmNewPassword" type="password" class="form-control" placeholder="Confirm new password" required />
                        </div>
                        <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>Change Password
                        </button>
                    </div>
                </form>
            </div>
            <div class="card-footer text-center">
                <a asp-controller="Admin" asp-action="SecurityFindings" class="btn btn-outline-secondary btn-sm">
                    <i class="fas fa-arrow-left me-1"></i>Back to Admin
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Add some client-side password strength indicator
        $(document).ready(function() {
            $('#NewPassword').on('input', function() {
                var password = $(this).val();
                var strength = 0;
                
                // Check length
                if (password.length >= 8) strength++;
                if (password.length >= 12) strength++;
                
                // Check for different character types
                if (/[a-z]/.test(password)) strength++;
                if (/[A-Z]/.test(password)) strength++;
                if (/[0-9]/.test(password)) strength++;
                if (/[^A-Za-z0-9]/.test(password)) strength++;
                
                var strengthText = '';
                var strengthClass = '';
                
                if (strength < 3) {
                    strengthText = 'Weak';
                    strengthClass = 'text-danger';
                } else if (strength < 5) {
                    strengthText = 'Medium';
                    strengthClass = 'text-warning';
                } else {
                    strengthText = 'Strong';
                    strengthClass = 'text-success';
                }
                
                // Update or create strength indicator
                var strengthIndicator = $('#password-strength');
                if (strengthIndicator.length === 0) {
                    $(this).parent().parent().append('<div id="password-strength" class="form-text"></div>');
                    strengthIndicator = $('#password-strength');
                }
                
                if (password.length > 0) {
                    strengthIndicator.html('<small>Password strength: <span class="' + strengthClass + '">' + strengthText + '</span></small>');
                } else {
                    strengthIndicator.html('');
                }
            });
        });
    </script>
}
